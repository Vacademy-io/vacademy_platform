name: Deploy Auth to LKE

on:
  push:
    branches:
      - main
    paths:
      - 'auth_service/**'

jobs:
  build-and-deploy:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Authenticate GitHub Package Registry
        env:
          JAVA_TOKEN: ${{ secrets.JAVA_TOKEN }}
        run: |
          echo "${JAVA_TOKEN}" | docker login ghcr.io -u shreyash-jain --password-stdin
          mkdir -p ~/.m2
          echo "<settings><servers><server><id>github</id><username>shreyash-jain</username><password>${JAVA_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml

      - name: Build Project
        working-directory: ./auth_service
        env:
          JAVA_TOKEN: ${{ secrets.JAVA_TOKEN }}
        run: mvn -s settings.xml clean install -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        working-directory: ./auth_service
        env:
          ECR_REGISTRY: public.ecr.aws/e0x1f4p4
          IMAGE_TAG: latest
          REPOSITORY: auth-service/auth-service-repo
          GITHUB_ACTOR: shreyash-jain
          JAVA_TOKEN: ${{ secrets.JAVA_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.JAVA_TOKEN }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          OAUTH_GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
          OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET}}
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG . --build-arg GITHUB_TOKEN=${GITHUB_TOKEN} --build-arg JAVA_TOKEN=${JAVA_TOKEN}
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "Docker Image Link = $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG"

      - name: Connect to LKE kubernetes cluster
        uses: Azure/k8s-set-context@v4.0.0
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.VACADEMY_STAGE_KUBECONFIG }}

      - name: Set Google Auth Env Vars in Deployment
        run: |
          kubectl set env deployment/auth-service \
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            OAUTH_GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
            OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET}}

      - name: Restart deployment
        id: restart-deployment
        env:
          DEPLOYMENT_NAME: auth-service
          NAMESPACE: default
        run: |
          kubectl rollout restart deployment $DEPLOYMENT_NAME --namespace $NAMESPACE
