spring.application.name=auth_service

## Database Connection - Local PostgreSQL in Kubernetes
spring.datasource.url=jdbc:postgresql://postgres.vacademy.svc.cluster.local:5432/auth_service
spring.datasource.username=postgres
spring.datasource.password=vacademy123
spring.datasource.driver-class-name=org.postgresql.Driver

## Hibernate/JPA Configuration - Auto DDL Update for Local Development
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

## Security - Local Development
application.my.username=local-admin
application.my.password=local-password
spring.mvc.dispatch-options-request=true

## Kubernetes Service URLs
auth.server.baseurl=http://auth-service.vacademy.svc.cluster.local:8071
admin.core.service.base_url=http://admin-core-service.vacademy.svc.cluster.local:8072
notification.server.baseurl=http://notification-service.vacademy.svc.cluster.local:8076

## File Upload
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

## Local Media Configuration
cloud.front.url=http://media-service.vacademy.svc.cluster.local:8075/media/

## OAuth2 Configuration - Local Development (Dummy Values)
spring.security.oauth2.client.registration.google.client-id=local-google-client-id
spring.security.oauth2.client.registration.google.client-secret=local-google-client-secret
spring.security.oauth2.client.registration.google.scope=openid,profile,email

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.security.oauth2.client.registration.github.client-id=local-github-client-id
spring.security.oauth2.client.registration.github.client-secret=local-github-client-secret
spring.security.oauth2.client.registration.github.scope=read:user,user:email

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

## Logging - More verbose for local development
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.springframework.boot.actuator.health=INFO

## Actuator - Enable all endpoints for local development
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

## Local Email Configuration (Mock)
spring.mail.host=localhost
spring.mail.port=2587
spring.mail.username=local-mail-username
spring.mail.password=local-mail-password

## Local AWS/S3 Configuration (Mock)
aws.bucket.name=local-vacademy-media-storage
aws.s3.public.bucket=local-vacademy-media-storage-public
s3.aws.access.key=local-aws-access-key
s3.aws.access.secret=local-aws-secret

## Local SES Configuration
ses.sender.email=support@localhost

## Local API Keys (Mock)
gemini.api.key=local-gemini-key
deepseek.api.key=local-deepseek-key
openrouter.api.key=local-openrouter-key
youtube.api.key=local-youtube-key
whatsapp.access.token=local-whatsapp-token 