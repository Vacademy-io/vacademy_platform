spring.application.name=notification_service
## Database Connection
spring.datasource.url=${NOTIFICATION_SERVICE_DB_URL}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.username=${DB_USERNAME}
## Email Credentials
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${AWS_MAIL_USERNAME}
spring.mail.password=${AWS_MAIL_PASSWORD}
## Security
application.my.username=${APP_USERNAME}
application.my.password=${APP_PASSWORD}
spring.mvc.dispatch-options-request=true
auth.server.baseurl=https://backend-stage.vacademy.io
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
logging.level.org.springframework.security=DEBUG
cloud.front.url=${CLOUD_FRONT_URL}
## Logging
org.springframework.boot.actuate.health.Logger=OFF
logging.level.org.springframework.boot.actuate.health=OFF
## Email Sender domain
app.ses.sender.email=${SES_SENDER_EMAIL}

# Email tracking and AWS placeholders (fill real values later)
ses.configuration.set=${SES_CONFIGURATION_SET}
ses.events.sqs.url=${SES_EVENTS_SQS_URL}
aws.accessKey=${SQS_AWS_ACCESS_KEY}
aws.secretKey=${SQS_AWS_SECRET_KEY}
aws.region=${SQS_AWS_REGION}

# Spring Cloud AWS Configuration 
spring.cloud.aws.region.static=${AWS_REGION}
spring.cloud.aws.credentials.access-key=${aws.accessKey}
spring.cloud.aws.credentials.secret-key=${aws.secretKey}

# SQS Configuration for Spring Cloud AWS
spring.cloud.aws.sqs.endpoint=${SQS_ENDPOINT}
spring.cloud.aws.sqs.region=${SQS_REGION}

## Holistic Whatsapp token
whatsapp.access-token=${WHATSAPP_ACCESS_TOKEN}

## Service URLs for User Resolution
admin.core.service.baseurl=https://backend-stage.vacademy.io

## Notification Configuration
notification.user.batch.size=100 

## SSE (Server-Sent Events) Configuration
sse.timeout=300000
sse.heartbeat.interval=30000
sse.cleanup.interval=60000
sse.max.connections.per.user=5
sse.event.queue.size=1000

## Async Support for SSE
spring.mvc.async.request-timeout=300000


spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true



# This tells Flyway to accept an existing schema and create a baseline
spring.flyway.baseline-on-migrate=true

# This tells Flyway which version number to baseline to.
# It should match your first migration script (e.g., V1__Initial_schema.sql)
spring.flyway.baseline-version=1